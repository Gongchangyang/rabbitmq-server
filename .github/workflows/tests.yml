# This is what we would like to do if YAML anchors were supported:
#
# min_supported_otp_version: &min_supported_otp_version 21.3
# max_supported_otp_version: &max_supported_otp_version 22.2
# min_and_max_supported_otp_versions: &min_and_max_supported_otp_versions [21.3, 22.2]
# elixir_version: &elixir_version 1.10.2
# vm_image: &vm_image ubuntu-18.04
#
# Since they are not, we will need to use search & replace when these change.
# The assumption that we should be using some sort of templating (e.g. ytt) is still being challenged.

# https://help.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow
name: Tests
on: push
jobs:
  check:
    name: Checks
    runs-on: ubuntu-18.04
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: 21.3
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: CHECK RABBITMQ COMPONENTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make check-rabbitmq-components.mk base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      # TODO: Are there any xref results that we should capture as artefacts?
      - name: CHECK CROSS REFERENCES
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make xref base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
  eunit:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: eunit - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make eunit base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
  ct-amqqueue_backward_compatibility:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: ct-amqqueue_backward_compatibility - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-amqqueue_backward_compatibility base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        # if: failure()
        with:
          name: ct-amqqueue_backward_compatibility-logs-OTPv${{matrix.otp}}
          path: logs
  ct-backing_queue:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: ct-backing_queue - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-backing_queue base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        # if: failure()
        with:
          name: ct-backing_queue-logs-OTPv${{matrix.otp}}
          path: logs
  ct-channel_interceptor:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: ct-channel_interceptor - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-channel_interceptor base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        # if: failure()
        with:
          name: ct-channel_interceptor-logs-OTPv${{matrix.otp}}
          path: logs
  ct-channel_operation_timeout:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: ct-channel_operation_timeout - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-channel_operation_timeout base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        # if: failure()
        with:
          name: ct-channel_operation_timeout-logs-OTPv${{matrix.otp}}
          path: logs
  ct-cluster:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: ct-cluster - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-cluster base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        # if: failure()
        with:
          name: ct-cluster-logs-OTPv${{matrix.otp}}
          path: logs
  ct-cluster_formation_locking:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: ct-cluster_formation_locking - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-cluster_formation_locking base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        # if: failure()
        with:
          name: ct-cluster_formation_locking-logs-OTPv${{matrix.otp}}
          path: logs
  ct-authn_authz_context_propagation:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: ct-authn_authz_context_propagation - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-authn_authz_context_propagation base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        # if: failure()
        with:
          name: ct-authn_authz_context_propagation-logs-OTPv${{matrix.otp}}
          path: logs
  ct-cluster_rename:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: ct-cluster_rename - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-cluster_rename base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        # if: failure()
        with:
          name: ct-cluster_rename-logs-OTPv${{matrix.otp}}
          path: logs
  ct-credential_validation:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: ct-credential_validation - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-credential_validation base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        # if: failure()
        with:
          name: ct-credential_validation-logs-OTPv${{matrix.otp}}
          path: logs
  ct-confirms_rejects:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: ct-confirms_rejects - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-confirms_rejects base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        # if: failure()
        with:
          name: ct-confirms_rejects-logs-OTPv${{matrix.otp}}
          path: logs
  ct-consumer_timeout:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: ct-consumer_timeout - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-consumer_timeout base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        # if: failure()
        with:
          name: ct-consumer_timeout-logs-OTPv${{matrix.otp}}
          path: logs
  ct-crashing_queues:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: ct-crashing_queues - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-crashing_queues base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        # if: failure()
        with:
          name: ct-crashing_queues-logs-OTPv${{matrix.otp}}
          path: logs
  ct-dead_lettering:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: ct-dead_lettering - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-dead_lettering base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        # if: failure()
        with:
          name: ct-dead_lettering-logs-OTPv${{matrix.otp}}
          path: logs
  ct-clustering_management_unclustered:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: ct-clustering_management_unclustered - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-clustering_management t=unclustered base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        # if: failure()
        with:
          name: ct-clustering_management_unclustered-logs-OTPv${{matrix.otp}}
          path: logs
  ct-clustering_management_clustered:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: ct-clustering_management_clustered - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-clustering_management t=clustered base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        # if: failure()
        with:
          name: ct-clustering_management_clustered-logs-OTPv${{matrix.otp}}
          path: logs
  ct-config_schema:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: ct-config_schema - OTPv${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-config_schema base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        # if: failure()
        with:
          name: ct-config_schema-logs-OTPv${{matrix.otp}}
          path: logs
